{
  "/Users/sohag/Projects/CareerCanvas/CareerCanvas.Api/services/auth/serverless.yml": {
    "versionFramework": "4.6.2",
    "servicePath": "/Users/sohag/Projects/CareerCanvas/CareerCanvas.Api/services/auth/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "careercanvas-auth",
      "plugins": [
        "serverless-plugin-typescript",
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "stage": "prod",
        "memorySize": 256,
        "timeout": 10,
        "environment": {
          "DYNAMODB_TTL_CACHE": 300,
          "AUTH_JWT_SECRET": "<REDACTED>",
          "AUTH_TOKEN_EXPIRY": "<REDACTED>",
          "USERS_TABLE": "careercanvas-auth-users-${self:provider.stage}",
          "OTP_TABLE": "careercanvas-auth-otp-${self:provider.stage}",
          "MAGIC_LINKS_TABLE": "careercanvas-auth-magic-links-${self:provider.stage}",
          "EMAIL_FROM": "${env:EMAIL_FROM}",
          "WEB_URL": "${env:WEB_URL}",
          "MOBILE_APP_SCHEME": "careercanvas",
          "ANDROID_PACKAGE_NAME": "${env:ANDROID_PACKAGE_NAME}",
          "IOS_BUNDLE_ID": "${env:IOS_BUNDLE_ID}",
          "DEEP_LINK_DOMAIN": "${env:DEEP_LINK_DOMAIN}",
          "TWILIO_ACCOUNT_SID": "${env:TWILIO_ACCOUNT_SID}",
          "TWILIO_AUTH_TOKEN": "<REDACTED>",
          "TWILIO_PHONE_NUMBER": "${env:TWILIO_PHONE_NUMBER}",
          "TWILIO_WHATSAPP_NUMBER": "${env:TWILIO_WHATSAPP_NUMBER}",
          "SMS_PROVIDER": "twilio",
          "WHATSAPP_PROVIDER": "twilio"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem"
                ],
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "UsersTable",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "OTPTable",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "MagicLinksTable",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "OTPTable",
                            "Arn"
                          ]
                        },
                        "index/*"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "MagicLinksTable",
                            "Arn"
                          ]
                        },
                        "index/*"
                      ]
                    ]
                  }
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "ses:SendEmail",
                  "ses:SendRawEmail"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "sns:Publish",
                  "sns:SetSMSAttributes",
                  "sns:CheckIfPhoneNumberIsOptedOut",
                  "sns:OptInPhoneNumber"
                ],
                "Resource": "*"
              }
            ]
          }
        }
      },
      "resources": {
        "Resources": {
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "${self:provider.environment.USERS_TABLE}",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "email",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "phone",
                  "AttributeType": "S"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "email-index",
                  "KeySchema": [
                    {
                      "AttributeName": "email",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "phone-index",
                  "KeySchema": [
                    {
                      "AttributeName": "phone",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "OTPTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "${self:provider.environment.OTP_TABLE}",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "phoneNumber",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "code",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "phone-code-index",
                  "KeySchema": [
                    {
                      "AttributeName": "phoneNumber",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "code",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TimeToLiveSpecification": {
                "AttributeName": "expires",
                "Enabled": true
              },
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              }
            }
          },
          "MagicLinksTable": {
            "Properties": {
              "TableName": "${self:provider.environment.MAGIC_LINKS_TABLE}",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "token",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "token-index",
                  "KeySchema": [
                    {
                      "AttributeName": "token",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TimeToLiveSpecification": {
                "AttributeName": "expires",
                "Enabled": true
              }
            }
          }
        }
      },
      "custom": {
        "serverless-offline": {
          "httpPort": 8003,
          "noPrependStageInUrl": true
        }
      },
      "functions": {
        "login": {
          "handler": "src/functions/auth/handler.login",
          "events": [
            {
              "http": {
                "path": "/auth/login",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ]
        },
        "register": {
          "handler": "src/functions/auth/handler.register",
          "events": [
            {
              "http": {
                "path": "/auth/register",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ]
        },
        "me": {
          "handler": "src/functions/auth/handler.me",
          "events": [
            {
              "http": {
                "path": "/auth/me",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ]
        },
        "sendMagicLink": {
          "handler": "src/functions/auth/handler.sendMagicLink",
          "events": [
            {
              "http": {
                "path": "/auth/magic-link",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ]
        },
        "verifyMagicLink": {
          "handler": "src/functions/auth/handler.verifyMagicLink",
          "events": [
            {
              "http": {
                "path": "/auth/verify-magic-link",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ]
        },
        "sendOTP": {
          "handler": "src/functions/auth/handler.sendOTP",
          "events": [
            {
              "http": {
                "path": "/auth/otp",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ]
        },
        "verifyOTP": {
          "handler": "src/functions/auth/handler.verifyOTP",
          "events": [
            {
              "http": {
                "path": "/auth/verify-otp",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ]
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stage": "prod",
      "memorySize": 256,
      "timeout": 10,
      "environment": {
        "DYNAMODB_TTL_CACHE": 300,
        "AUTH_JWT_SECRET": "<REDACTED>",
        "AUTH_TOKEN_EXPIRY": "<REDACTED>",
        "USERS_TABLE": "careercanvas-auth-users-${self:provider.stage}",
        "OTP_TABLE": "careercanvas-auth-otp-${self:provider.stage}",
        "MAGIC_LINKS_TABLE": "careercanvas-auth-magic-links-${self:provider.stage}",
        "EMAIL_FROM": "${env:EMAIL_FROM}",
        "WEB_URL": "${env:WEB_URL}",
        "MOBILE_APP_SCHEME": "careercanvas",
        "ANDROID_PACKAGE_NAME": "${env:ANDROID_PACKAGE_NAME}",
        "IOS_BUNDLE_ID": "${env:IOS_BUNDLE_ID}",
        "DEEP_LINK_DOMAIN": "${env:DEEP_LINK_DOMAIN}",
        "TWILIO_ACCOUNT_SID": "${env:TWILIO_ACCOUNT_SID}",
        "TWILIO_AUTH_TOKEN": "<REDACTED>",
        "TWILIO_PHONE_NUMBER": "${env:TWILIO_PHONE_NUMBER}",
        "TWILIO_WHATSAPP_NUMBER": "${env:TWILIO_WHATSAPP_NUMBER}",
        "SMS_PROVIDER": "twilio",
        "WHATSAPP_PROVIDER": "twilio"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UsersTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "OTPTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "MagicLinksTable",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::GetAtt": [
                          "OTPTable",
                          "Arn"
                        ]
                      },
                      "index/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::GetAtt": [
                          "MagicLinksTable",
                          "Arn"
                        ]
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "sns:Publish",
                "sns:SetSMSAttributes",
                "sns:CheckIfPhoneNumberIsOptedOut",
                "sns:OptInPhoneNumber"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "Cannot resolve '${env:EMAIL_FROM}' variable at 'provider.environment.EMAIL_FROM'. No value is available for this variable, and no default value was provided. Please check your variable definitions or provide a default value.",
      "stack": "Error: Cannot resolve '${env:EMAIL_FROM}' variable at 'provider.environment.EMAIL_FROM'. No value is available for this variable, and no default value was provided. Please check your variable definitions or provide a default value.\n    at _ResolverManager.resolve (file:///Users/sohag/.serverless/releases/4.6.2/package/dist/sf-core.js:931:32412)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async #handlePlaceholderNode (file:///Users/sohag/.serverless/releases/4.6.2/package/dist/sf-core.js:931:30619)\n    at async file:///Users/sohag/.serverless/releases/4.6.2/package/dist/sf-core.js:931:28483\n    at async processNodeAndHandleCompletion (file:///Users/sohag/.serverless/releases/4.6.2/package/dist/sf-core.js:931:17199)",
      "code": "MISSING_VARIABLE_RESULT"
    },
    "serviceRawFile": "service: careercanvas-auth\n\nplugins:\n  - serverless-plugin-typescript\n  - serverless-offline\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: ${env:AWS_REGION}\n  stage: ${env:STAGE, 'prod'}\n  memorySize: 256    # Reduce from default if not needed\n  timeout: 10        # Adjust based on actual needs\n  environment:\n    # Add cache settings\n    DYNAMODB_TTL_CACHE: 300\n    AUTH_JWT_SECRET: ${env:AUTH_JWT_SECRET}\n    AUTH_TOKEN_EXPIRY: ${env:AUTH_TOKEN_EXPIRY}\n    USERS_TABLE: ${self:service}-users-${self:provider.stage}\n    OTP_TABLE: ${self:service}-otp-${self:provider.stage}\n    MAGIC_LINKS_TABLE: ${self:service}-magic-links-${self:provider.stage}\n    EMAIL_FROM: ${env:EMAIL_FROM}\n    WEB_URL: ${env:WEB_URL}\n    MOBILE_APP_SCHEME: ${env:MOBILE_APP_SCHEME, 'careercanvas'}\n    ANDROID_PACKAGE_NAME: ${env:ANDROID_PACKAGE_NAME}\n    IOS_BUNDLE_ID: ${env:IOS_BUNDLE_ID}\n    DEEP_LINK_DOMAIN: ${env:DEEP_LINK_DOMAIN}\n    TWILIO_ACCOUNT_SID: ${env:TWILIO_ACCOUNT_SID}\n    TWILIO_AUTH_TOKEN: ${env:TWILIO_AUTH_TOKEN}\n    TWILIO_PHONE_NUMBER: ${env:TWILIO_PHONE_NUMBER}\n    TWILIO_WHATSAPP_NUMBER: ${env:TWILIO_WHATSAPP_NUMBER}\n    SMS_PROVIDER: ${env:SMS_PROVIDER, 'twilio'}\n    WHATSAPP_PROVIDER: ${env:WHATSAPP_PROVIDER, 'twilio'}\n\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - dynamodb:Query\n            - dynamodb:Scan\n            - dynamodb:GetItem\n            - dynamodb:PutItem\n            - dynamodb:UpdateItem\n            - dynamodb:DeleteItem\n          Resource: \n            - !GetAtt UsersTable.Arn\n            - !GetAtt OTPTable.Arn\n            - !GetAtt MagicLinksTable.Arn\n            - !Join ['/', [!GetAtt OTPTable.Arn, 'index/*']]\n            - !Join ['/', [!GetAtt MagicLinksTable.Arn, 'index/*']]\n        - Effect: Allow\n          Action:\n            - ses:SendEmail\n            - ses:SendRawEmail\n          Resource: \"*\"\n        - Effect: Allow\n          Action:\n            - sns:Publish\n            - sns:SetSMSAttributes\n            - sns:CheckIfPhoneNumberIsOptedOut\n            - sns:OptInPhoneNumber\n          Resource: \"*\"\n\nresources:\n  Resources:\n    UsersTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:provider.environment.USERS_TABLE}\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n          - AttributeName: email\n            AttributeType: S\n          - AttributeName: phone\n            AttributeType: S\n        GlobalSecondaryIndexes:\n          - IndexName: email-index\n            KeySchema:\n              - AttributeName: email\n                KeyType: HASH\n            Projection:\n              ProjectionType: ALL\n          - IndexName: phone-index\n            KeySchema:\n              - AttributeName: phone\n                KeyType: HASH\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n\n    OTPTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:provider.environment.OTP_TABLE}\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n          - AttributeName: phoneNumber\n            AttributeType: S\n          - AttributeName: code\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        GlobalSecondaryIndexes:\n          - IndexName: phone-code-index\n            KeySchema:\n              - AttributeName: phoneNumber\n                KeyType: HASH\n              - AttributeName: code\n                KeyType: RANGE\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n        TimeToLiveSpecification:\n          AttributeName: expires\n          Enabled: true    # Ensures automatic deletion of expired OTPs\n        ProvisionedThroughput:    # Instead of PAY_PER_REQUEST for predictable traffic\n          ReadCapacityUnits: 5\n          WriteCapacityUnits: 5\n\n    MagicLinksTable:\n      Properties:\n        # Similar TTL and provisioned throughput settings\n        TableName: ${self:provider.environment.MAGIC_LINKS_TABLE}\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n          - AttributeName: token\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        GlobalSecondaryIndexes:\n          - IndexName: token-index\n            KeySchema:\n              - AttributeName: token\n                KeyType: HASH\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n        TimeToLiveSpecification:\n          AttributeName: expires\n          Enabled: true\n\ncustom:\n  serverless-offline:\n    httpPort: 8003\n    noPrependStageInUrl: true\nfunctions:\n  login:\n    handler: src/functions/auth/handler.login\n    events:\n      - http:\n          path: /auth/login\n          method: post\n          cors:\n            origin: ${env:CORS_ORIGIN, '*'}\n            headers:\n              - Content-Type\n              - Authorization\n            allowCredentials: true\n\n  register:\n    handler: src/functions/auth/handler.register\n    events:\n      - http:\n          path: /auth/register\n          method: post\n          cors:\n            origin: ${env:CORS_ORIGIN, '*'}\n            headers:\n              - Content-Type\n              - Authorization\n            allowCredentials: true\n\n  me:\n    handler: src/functions/auth/handler.me\n    events:\n      - http:\n          path: /auth/me\n          method: get\n          cors:\n            origin: ${env:CORS_ORIGIN, '*'}\n            headers:\n              - Content-Type\n              - Authorization\n            allowCredentials: true\n\n  sendMagicLink:\n    handler: src/functions/auth/handler.sendMagicLink\n    events:\n      - http:\n          path: /auth/magic-link\n          method: post\n          cors:\n            origin: ${env:CORS_ORIGIN, '*'}\n            headers:\n              - Content-Type\n              - Authorization\n            allowCredentials: true\n\n  verifyMagicLink:\n    handler: src/functions/auth/handler.verifyMagicLink\n    events:\n      - http:\n          path: /auth/verify-magic-link\n          method: post\n          cors:\n            origin: ${env:CORS_ORIGIN, '*'}\n            headers:\n              - Content-Type\n              - Authorization\n            allowCredentials: true\n\n  sendOTP:\n    handler: src/functions/auth/handler.sendOTP\n    events:\n      - http:\n          path: /auth/otp\n          method: post\n          cors:\n            origin: ${env:CORS_ORIGIN, '*'}\n            headers:\n              - Content-Type\n              - Authorization\n            allowCredentials: true\n\n  verifyOTP:\n    handler: src/functions/auth/handler.verifyOTP\n    events:\n      - http:\n          path: /auth/verify-otp\n          method: post\n          cors:\n            origin: ${env:CORS_ORIGIN, '*'}\n            headers:\n              - Content-Type\n              - Authorization\n            allowCredentials: true",
    "command": [
      "info"
    ],
    "options": {
      "stage": "dev"
    },
    "orgId": "nTc8j2nC393FphscxV",
    "orgName": "sohagmahamud",
    "userId": "cmTrJ3jtX4gfJ3962z",
    "userName": "sohagmahamud",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}