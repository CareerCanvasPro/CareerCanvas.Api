name: Auth Service CI/CD

on:
  push:
    paths:
      - 'services/auth/**'
    branches: [main]
  pull_request:
    paths:
      - 'services/auth/**'
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
        working-directory: services/auth
      
      - name: Lint Check
        run: npm run lint
        working-directory: services/auth
      
      - name: Run Tests
        run: npm test
        working-directory: services/auth
      
      - name: Security Audit
        run: npm audit
        working-directory: services/auth

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
        working-directory: services/auth
      
      - name: Deploy to Staging
        run: npx serverless deploy --stage staging
        working-directory: services/auth
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AUTH_JWT_SECRET: ${{ secrets.AUTH_JWT_SECRET }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
        working-directory: services/auth
      
      - name: Deploy to Production
        run: npx serverless deploy --stage prod
        working-directory: services/auth
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AUTH_JWT_SECRET: ${{ secrets.AUTH_JWT_SECRET }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}

      - name: Notify Deployment
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'deployments'
          slack-message: 'Auth Service deployed to production successfully! :rocket:'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}