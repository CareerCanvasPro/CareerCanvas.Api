name: CareerCanvas API CI/CD

on:
  push:
    paths:
      - 'services/**'
    branches: [main, dev]
  pull_request:
    paths:
      - 'services/**'
    branches: [main, dev]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          for d in services/*/ ; do
            cd "$d"
            npm ci
            cd ../../
          done
      
      - name: Run Tests
        run: |
          for d in services/*/ ; do
            cd "$d"
            npm test || exit 1
            cd ../../
          done

  test-and-deploy-ec2:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}
          
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/deploy/CareerCanvas.Api
            git fetch
            git checkout dev
            git pull
            for d in services/*/ ; do
              cd "$d"
              npm install
              npm run build
              pm2 restart $(basename "$d")-service || pm2 start npm --name "$(basename "$d")-service" -- start
              cd ../../
            done
            pm2 save
            pm2 list
          EOF

      - name: Notify Deployment
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'deployments'
          slack-message: 'ðŸš€ Services deployed to EC2 development environment successfully!'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # Temporarily comment out serverless deployment until ready
  # deploy-serverless:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   environment: production
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '18'
  #         cache: 'npm'
  #     
  #     - name: Deploy Services
  #       run: |
  #         for d in services/*/ ; do
  #           cd "$d"
  #           npm ci
  #           npx serverless deploy --stage prod
  #           cd ../../
  #         done
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AUTH_JWT_SECRET: ${{ secrets.AUTH_JWT_SECRET }}
  #         TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
  #         TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
  #
  #     - name: Notify Deployment
  #       if: success()
  #       uses: slackapi/slack-github-action@v1.24.0
  #       with:
  #         channel-id: 'deployments'
  #         slack-message: 'ðŸš€ All services deployed to ${{ github.ref == "refs/heads/main" && "production" || "development" }} successfully!'
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}