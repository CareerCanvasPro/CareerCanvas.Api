name: CareerCanvas API CI/CD

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install Dependencies
      run: |
        npm install
        npm install -g lerna
        npm install -ws
    
    - name: Build
      run: lerna run build
    
    # Temporarily comment out tests until they're configured
    # - name: Test
    #   run: lerna run test
    
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup SSH Keys
      run: |
        mkdir -p /home/runner/.ssh/
        echo "${{ secrets.DEPLOY_SSH_KEY }}" > /home/runner/.ssh/deploy_key
        chmod 600 /home/runner/.ssh/deploy_key
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: deploy
        key_path: /home/runner/.ssh/deploy_key
        port: 22
        envs: REPO_ACCESS_TOKEN
        script: |
          # Install Node.js and dependencies as root
          sudo su - root << 'EOSUDO'
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt-get update
          apt-get install -y nodejs git
          npm install -g lerna
          
          # Setup project directory
          mkdir -p /home/deploy/CareerCanvas.Api
          chown -R deploy:deploy /home/deploy/CareerCanvas.Api
          EOSUDO
          
          # Continue as deploy user
          cd /home/deploy/CareerCanvas.Api
          
          # Clone repository with token
          rm -rf .git
          git clone https://oauth2:${{ secrets.REPO_ACCESS_TOKEN }}@github.com/sohag-mbstu/CareerCanvas.Api.git .
          
          # Install project dependencies
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          npm install
          npm install -ws
          lerna run build
          bash deploy.sh