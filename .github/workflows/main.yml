name: CareerCanvas API CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Add concurrency group
concurrency:
  group: "deploy-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Install Dependencies
        run: |
          npm install
          npm install -g lerna
          npm install -ws

      - name: Build
        run: lerna run build

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        env:
          AWSREGION_PRODUCTION: ${{ secrets.AWSREGION_PRODUCTION }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          GH_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: deploy
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          command_timeout: "30m"
          script_stop: true
          envs: |
            GH_TOKEN
            AWSREGION_PRODUCTION
            CLIENT_SECRET
          script: |
            export AWSREGION_PRODUCTION="${{ secrets.AWSREGION_PRODUCTION }}"
            export CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}"
            export GH_TOKEN="${{ secrets.REPO_ACCESS_TOKEN }}"

            # Set environment variables
            echo "AWSREGION_PRODUCTION='${AWSREGION_PRODUCTION}'" | tee -a ~/.env
            echo "CLIENT_SECRET='${CLIENT_SECRET}'" | tee -a ~/.env
            echo "PM2_AWSREGION_PRODUCTION='${AWSREGION_PRODUCTION}'" | tee -a ~/.env
            echo "PM2_CLIENT_SECRET='${CLIENT_SECRET}'" | tee -a ~/.env

            # Source environment variables
            set -a
            source ~/.env
            set +a

            REPO_URL="https://oauth2:${GH_TOKEN}@github.com/CareerCanvasPro/CareerCanvas.Api.git"
            DEPLOY_DIR="/home/deploy/CareerCanvas.Api"

            # Copy environment file
            cp ~/.env "$DEPLOY_DIR/.env"

            echo -e "Checking deployment directory..."

            # Check if the directory exists and is a valid Git repository
            if [ -d "$DEPLOY_DIR" ] && [ -d "$DEPLOY_DIR/.git" ]; then
                echo -e "Directory exists and is a Git repository. Pulling latest changes..."
                cd "$DEPLOY_DIR" || { echo -e "Failed to enter directory!"; exit 1; }

                # Ensure the correct remote URL is set
                git remote set-url origin "$REPO_URL"

                # Pull latest changes
                if ! git pull origin "$(git rev-parse --abbrev-ref HEAD)"; then
                    echo -e "Git pull failed!"
                    exit 1
                fi
            else
                echo -e "Directory does not exist or is not a Git repository. Cloning repository..."
                cd /home/deploy || { echo -e "Failed to enter deploy directory!"; exit 1; }
                rm -rf CareerCanvas.Api # Remove any corrupted or non-git directory

                # Clone repository
                if ! git clone "$REPO_URL"; then
                    echo -e "Git clone failed!"
                    exit 1
                fi

                cd CareerCanvas.Api || { echo -e "Failed to enter cloned repository!"; exit 1; }
            fi
            bash /home/deploy/CareerCanvas.Api/deployment/scripts/deploy.sh
